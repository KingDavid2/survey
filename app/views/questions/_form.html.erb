<h3>Question</h3>

<%= form_for form, as: :question, url: url, method: method do |f| %>
  <%- unless form.errors.empty? %>
    <ul>
      <%- form.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
    </ul>
  <% end %>

  <%= f.submit submit_text, class: 'btn btn-primary mb-2' %>

  <div class="form-group mb-2">
    <%= f.label :type %>
    <%= f.select :type, ::QuestionForm::QUESTION_TYPES, {}, {id: "question_type", class: 'form-select' }  %>
  </div>

  <div class="form-group mb-2 d-none">
    <%= check_box_tag(:multiple_select_question, '1', false , {class: 'form-check-input'} ) %>
    <%= label_tag(:multiple_select_question, "Multiple select question") %>
  </div>

  <div class="form-group mb-2">
    <%= f.label :question_text %>
    <%= f.rich_text_area :question_text %>
  </div>

  <div class="form-group mb-2">
    <%= f.label :section %>
    <%= f.number_field :section, value: form.section || @survey.last_section_number + 1 %>
    <button id="add_section_button" class="btn btn-primary mb-2">+1</button>
  </div>

  <div class="form-group mb-2">
    <%= f.label :page %>
    <%= f.number_field :page, value: form.page || @survey.last_page_number %>
    <button id="add_page_button" class="btn btn-primary mb-2">+1</button>
  </div>

  <div class="form-group mb-2">
    <%= f.label :position %>
    <%= f.number_field :position, value: form.position || @survey.last_position_number + 1 %>
  </div>

  <div class="form-group mb-2">
    <%= f.label :answer_options %>
    <%= f.text_area :answer_options, rows: 10 %>
  </div>

  <div class="form-group mb-2 d-none">
    <%= f.label :placeholder %>
    <%= f.text_field :placeholder %>
  </div>

  <div class="form-group mb-2 d-none">
    <%= f.label :default_text %>
    <%= f.text_field :default_text %>
  </div>

  <div class="form-group mb-2 d-none">
    <%= f.label :matrix_size %>
    <%= f.number_field :matrix_size %>
  </div>

    <h4>Other options</h4>
    <hr/>

  <div class="form-group mb-2">
    <%= f.check_box :answer_presence %>
    <%= f.label :answer_presence %>
  </div>

  <div class="form-group mb-2">
    <%= f.label :answer_presence_on_question %>
    <%= f.text_field :answer_presence_on_question %>
  </div>

  <div class="form-group mb-2">
    <%= f.label :answer_presence_on_answers %>
    <%= f.text_area :answer_presence_on_answers, rows: 5 %>
  </div>

  <div class="form-group mb-2">
    <%= f.label :answer_uniqueness_on_section %>
    <%= f.text_field :answer_uniqueness_on_section %>
  </div>

  <div class="form-group mb-2">
    <%= f.check_box :answer_presence_on_section_if_checked %>
    <%= f.label :answer_presence_on_section_if_checked %>
  </div>

  <div class="form-group mb-2">
    <%= f.check_box :answer_checked_and_not_required_short %>
    <%= f.label :answer_checked_and_not_required_short %>
  </div>

  <div class="form-group mb-2 d-none">
    <%= f.label :answer_minimum_length %>
    <%= f.text_field :answer_minimum_length %>
  </div>

  <div class="form-group mb-2 d-none">
    <%= f.label :answer_maximum_length %>
    <%= f.text_field :answer_maximum_length %>
  </div>

  <div class="form-group mb-2 d-none">
    <%= f.label :answer_greater_than_or_equal_to %>
    <%= f.text_field :answer_greater_than_or_equal_to %>
  </div>

  <div class="form-group mb-2 d-none">
    <%= f.label :answer_less_than_or_equal_to %>
    <%= f.text_field :answer_less_than_or_equal_to %>
  </div>

  <%= f.submit submit_text, class: 'btn btn-primary mb-2' %>
<% end %>

<script>
  const questionType = document.getElementById('question_type');
  const answerOptions = document.getElementById('question_answer_options');
  const sectionValue = document.getElementById('question_section');
  const addSectionButton = document.getElementById('add_section_button');
  const addPageButton = document.getElementById('add_page_button');
  const pageValue = document.getElementById('question_page');
  const multipleSelectQuestion = document.getElementById('multiple_select_question');

  questionType.addEventListener('change', (event) => {
    checkSelection()
  });

  function checkSelection(){
    if (answerOptions.value === '') {
      if (questionType.value === 'Questions::Select' || questionType.value === 'Questions::MatrixRating') {
        document.getElementById('question_answer_options').value = [...Array(10).keys()].map(x => x + 1).join("\n");
      }
    }

    if (questionType.value === 'Questions::Select') {
      multipleSelectQuestion.parentElement.classList.remove('d-none');
    } else {
      multipleSelectQuestion.parentElement.classList.add('d-none');
    }

    if ( questionType.value === 'Questions::CheckboxShort') {
      document.getElementById('question_answer_presence_on_section_if_checked').checked = true   
    }

    if (questionType.value === 'Questions::Information' || questionType.value === 'Questions::MatrixHeader' || questionType.value === 'Questions::CheckboxShort') {
      checkPresence(false)
    } else {
      checkPresence(true)
    }
  }

  function checkPresence(value) {
    document.getElementById('question_answer_presence').checked = value    
  }

  addSectionButton.addEventListener('click', () => {
    event.preventDefault();
    sectionValue.value = parseInt(sectionValue.value) + 1;
  });

  addPageButton.addEventListener('click', () => {
    event.preventDefault();
    pageValue.value = parseInt(pageValue.value) + 1;
  });

  checkSelection()

</script>
